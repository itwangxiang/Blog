<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>须远</title><link>https://wxiang.cc/</link><description>须远</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><managingEditor>itwangxiang@gmail.com (Kim Liss)</managingEditor><webMaster>itwangxiang@gmail.com (Kim Liss)</webMaster><lastBuildDate>Wed, 23 Sep 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://wxiang.cc/index.xml" rel="self" type="application/rss+xml"/><item><title>Spring cloud 微服务架构</title><link>https://wxiang.cc/spring-cloud/</link><pubDate>Wed, 23 Sep 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://wxiang.cc/spring-cloud/</guid><description>结构 Eureka 微服务注册表可实现弹性的中间层负载平衡和故障转移。.
微服务发现框架
Eureka Client：负责将这个服务的信息注册到Eureka Server中 Eureka Server：注册中心，里面有一个注册表，保存了各个服务所在的机器和端口号 Feign 使编写Java HTTP客户端更加容易
简化微服务之间的请求代码
Ribbon Ribbon 是一个进程间通信（远程过程调用）库，具有内置的软件负载平衡器。主要使用模型涉及具有各种序列化方案支持的REST调用
负载均衡工具
场景：
请求一个服务（有多个主机），可以均衡的请求
Hystrix Hystrix 是一个延迟和容错库，旨在隔离对远程系统，服务和第三方库的访问点，停止级联故障，并在不可避免发生故障的复杂分布式系统中实现弹性。
熔断器
雪崩：因某个请求失败而影响其他微服务，最终导致真个系统崩溃 熔断：隔离请求服务，将其失败不在影响其他服务 降级：请求失败后，采用备选方案处理 Zuul Zuul是一项网关服务，可提供动态路由，监视，弹性，安全性等
微服务网关
任何请求通过该网关转发至对应的服务</description></item><item><title>Mongodb 常用命令</title><link>https://wxiang.cc/mongodb/</link><pubDate>Sat, 14 Mar 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://wxiang.cc/mongodb/</guid><description><![CDATA[Mongodb 常用命令 aggregate 求和
1 2 3 4 5  db.app_log.aggregate([ { $match: { userId: &#34;kim&#34;, type: &#34;use&#34; } }, { $group: { _id: {}, total: { $sum: &#34;$useTime&#34; } } }, { $project: {_id: 0, total: 1}} ])   ]]></description></item><item><title>MySQL 常用命令</title><link>https://wxiang.cc/mysql/</link><pubDate>Thu, 13 Feb 2020 00:00:00 +0000</pubDate><author>作者</author><guid>https://wxiang.cc/mysql/</guid><description><![CDATA[安装 1  sudo apt-get install mysql-server mysql-client   查看端口 1  sudo netstat -tap | grep mysql   设置初始密码 1  sudo mysql_secure_installation   登录 1  mysql -u root -ppassword   常用SQL 1 2 3 4 5 6 7 8  -- 设置密码安全等级 setglobalvalidate_password_policy=0;-- 创建库 CreateDATABASEIFNOTEXISTS`todev_dev`defaultcharsetutf8COLLATEutf8_general_ci;-- 设置 todev_dev 访问密钥 -- create user `todev_dev` identified by &#39;111111&#39;; -- grant all privileges on `todev_dev`.* to `todev_dev`@`%` identified by &#39;111111&#39;; ALTERUSER&#39;todev_dev&#39;@&#39;%&#39;IDENTIFIEDBY&#39;111111&#39;;  常见问题 无法远程连接 1 2 3 4 5 6  ## 打开配置文件 vi /etc/mysql/mysql.]]></description></item><item><title>Kotlin 常用语法</title><link>https://wxiang.cc/kotlin/</link><pubDate>Tue, 05 Nov 2019 00:00:00 +0000</pubDate><author>作者</author><guid>https://wxiang.cc/kotlin/</guid><description><![CDATA[官方文档 - en / zh-cn
 惯用语法 - en / zh-cn
  基础 基础语法   包
1 2  package my.demo import kotlin.text.*     函数
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16  fun sum(a: Int, b: Int): Int { return a + b } //表达式作为函数体，返回类型自动推断 fun sum(a: Int, b: Int) = a + b //无返回值的函数 fun printSum(a: Int, b: Int): Unit { println(&#34;sum of $aand $bis ${a + b}&#34;) } //Unit 返回类型可以省略 fun printSum(a: Int, b: Int) { println(&#34;sum of $aand $bis ${a + b}&#34;) }     变量]]></description></item><item><title>ADB 常用命令</title><link>https://wxiang.cc/adb/</link><pubDate>Thu, 10 Oct 2019 00:00:00 +0000</pubDate><author>作者</author><guid>https://wxiang.cc/adb/</guid><description><![CDATA[常规 1 2 3 4 5 6 7 8  adb tcpip 5555 //设置远程设备监听端口 adb connect ip:port //连接远程设备 adb -s 20b5c60c shell ifconfig wlan0 //查看 IP adb reconnect //重新连接设备 adb shell am start -n ｛package｝/.{activity} //启动程序 adb shell setprop persist.service.adb.tcp.port 5555 //设置系统重启后，远程设备监听端口 adb shell wifitest -z &#34;W 00:1f:2e:3d:4c:5b&#34; //设置 WI-FI MAC adb shell wifitest -z &#34;B 00:1f:2e:3d:4c:5b&#34; //设置 蓝牙 MAC   ]]></description></item><item><title>Centos 常用命令</title><link>https://wxiang.cc/centos/</link><pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate><author>作者</author><guid>https://wxiang.cc/centos/</guid><description><![CDATA[Shadowsocks 安装 1 2  yum install python-setuptools &amp;&amp; easy_install pip pip install shadowsocks   使用 1 2 3 4  ssserver -p 443 -k password -m rc4-md5 # 前台启动 sudo ssserver -p 443 -k password -m rc4-md5 --user nobody -d start # 后台启动 sudo ssserver -d stop # 停止 sudo less /var/log/shadowsocks.log # 查看日志   注：使用配置文件 创建配置文件 /etc/shadowsocks.json ，例如：
1 2 3 4 5 6 7 8 9 10  { &#34;server&#34;:&#34;my_server_ip&#34;, &#34;server_port&#34;:8388, &#34;local_address&#34;: &#34;127.]]></description></item><item><title>Linux 常用命令</title><link>https://wxiang.cc/linux/</link><pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate><author>作者</author><guid>https://wxiang.cc/linux/</guid><description>常用命令 1 2 3 4 5 6 7 8 rm -rf a.txt ##删除 cp b.txt a.txt ##复制文件 mv a.txt b.txt ##修改文件名 nohup ping todev.cn &amp;amp; ## 后台任务 jobs -l ## 查看后台任务, num,pid kill %num ## 杀掉后台任务，根据编号 ps -aux | grep &amp;#34;****&amp;#34; ## 查看相关进程 kill pid ## 杀掉进程，根据pid 设置文件权限 1 2 3 4 5 6 7 8 chmod 777 test.txt # 设置 test.txt 文件为所有用户都有读、写、执行权限 -rw------- (600) 只有拥有者有读写权限。 -rw-r--r-- (644) 只有拥有者有读写权限；而属组用户和其他用户只有读权限。 -rwx------ (700) 只有拥有者有读、写、执行权限。 -rwxr-xr-x (755) 拥有者有读、写、执行权限；而属组用户和其他用户只有读、执行权限。 -rwx--x--x (711) 拥有者有读、写、执行权限；而属组用户和其他用户只有执行权限。 -rw-rw-rw- (666) 所有用户都有文件读、写权限。 -rwxrwxrwx (777) 所有用户都有读、写、执行权限。 环境配置 1 2 3 4 # 编辑 vi ~/.</description></item><item><title>Mac 常用命令</title><link>https://wxiang.cc/mac/</link><pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate><author>作者</author><guid>https://wxiang.cc/mac/</guid><description>Mac 用户环境变量 bash 1 2 3 4 5 6 7 vim ~/.bash_profile export ANDROID_HOME=/Users/xxx/Library/Android/sdk export PATH=${PATH}:${ANDROID_HOME}/tools export PATH=${PATH}:${ANDROID_HOME}/platform-tools source .bash_profile zsh 1 2 3 4 5 6 7 vim ~/.zshrc export ANDROID_HOME=/Users/xxx/Library/Android/sdk export PATH=${PATH}:${ANDROID_HOME}/tools export PATH=${PATH}:${ANDROID_HOME}/platform-tools source .zshrc</description></item><item><title>Ubuntu 常用命令</title><link>https://wxiang.cc/ubuntu/</link><pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate><author>作者</author><guid>https://wxiang.cc/ubuntu/</guid><description><![CDATA[apt 常用命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33  apt-cache search package # 搜索包 apt-cache show package # 获取包的相关信息，如说明、大小、版本等 sudo apt-get install package # 安装包 sudo apt-get install package - - reinstall # 重新安装包 sudo apt-get -f install # 修复安装&#34;-f = ——fix-missing&#34; sudo apt-get remove package # 删除包 sudo apt-get remove package - - purge # 删除包，包括删除配置文件等 sudo apt-get update # 更新源 sudo apt-get upgrade # 更新已安装的包 sudo apt-get dist-upgrade # 升级系统 sudo apt-get dselect-upgrade # 使用 dselect 升级 apt-cache depends package # 了解使用依赖 apt-cache rdepends package # 是查看该包被哪些包依赖 sudo apt-get build-dep package # 安装相关的编译环境 apt-get source package # 下载该包的源代码 sudo apt-get clean &amp;&amp; sudo apt-get autoclean # 清理无用的包 sudo apt-get check # 检查是否有损坏的依赖   常见问题 修改密码 1  sudo passwd root   中文乱码 1 2 3 4 5 6  locale # 查看是否中文 locale-gen zh_CN.]]></description></item><item><title>Windows 常用命令</title><link>https://wxiang.cc/windows/</link><pubDate>Mon, 15 Apr 2019 00:00:00 +0000</pubDate><author>作者</author><guid>https://wxiang.cc/windows/</guid><description><![CDATA[开发环境 使用 Scoop 搭建开发环境
1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67  ######################################################### ################## Scoop Install ################# ######################################################### ##### Set ExecutionPolicy Set-ExecutionPolicy RemoteSigned -scope CurrentUser ##### Custom Path $env:SCOOP=&#39;D:\wxiang\Scoop&#39; [environment]::setEnvironmentVariable(&#39;SCOOP&#39;,$env:SCOOP,&#39;User&#39;) iwr -useb get.]]></description></item></channel></rss>